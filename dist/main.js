/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkdota_shuffle_players"] = self["webpackChunkdota_shuffle_players"] || []).push([["main"],{

/***/ "./node_modules/uniqid/index.js":
/*!**************************************!*\
  !*** ./node_modules/uniqid/index.js ***!
  \**************************************/
/***/ ((module) => {

eval("/* \n(The MIT License)\nCopyright (c) 2014-2021 Halász Ádám <adam@aimform.com>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n//  Unique Hexatridecimal ID Generator\n// ================================================\n\n//  Dependencies\n// ================================================\nvar pid = typeof process !== 'undefined' && process.pid ? process.pid.toString(36) : '' ;\nvar address = '';\nif(false){ var i, networkInterfaces, mac, os; } \n\n//  Exports\n// ================================================\nmodule.exports = module.exports[\"default\"] = function(prefix, suffix){ return (prefix ? prefix : '') + address + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.process = function(prefix, suffix){ return (prefix ? prefix : '') + pid + now().toString(36) + (suffix ? suffix : ''); }\nmodule.exports.time    = function(prefix, suffix){ return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\n//  Helpers\n// ================================================\nfunction now(){\n    var time = Date.now();\n    var last = now.last || time;\n    return now.last = time > last ? time : last + 1;\n}\n\n\n//# sourceURL=webpack://dota-shuffle-players/./node_modules/uniqid/index.js?");

/***/ }),

/***/ "./src/Player.js":
/*!***********************!*\
  !*** ./src/Player.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Player)\n/* harmony export */ });\nconst uniqid = __webpack_require__(/*! uniqid */ \"./node_modules/uniqid/index.js\");\r\nclass Player {\r\n  constructor(name, mmr) {\r\n    this.id = uniqid();\r\n    this.name = name;\r\n    this.mmr = mmr;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://dota-shuffle-players/./src/Player.js?");

/***/ }),

/***/ "./src/PlayerList.js":
/*!***************************!*\
  !*** ./src/PlayerList.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PlayerList)\n/* harmony export */ });\n/* harmony import */ var _utils_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/common */ \"./src/utils/common.js\");\n\r\n\r\nclass PlayerList {\r\n  constructor() {\r\n    if (PlayerList._instance) {\r\n      return PlayerList._instance;\r\n    }\r\n    PlayerList._instance = this;\r\n\r\n    this.players = [];\r\n  }\r\n\r\n  addPlayer(player) {\r\n    this.players.push(player);\r\n  }\r\n\r\n  removePlayer(playerId) {\r\n    this.players = this.players.filter((player) => player.id !== playerId);\r\n  }\r\n\r\n  shufflePlayer() {\r\n    const sortedPlayers = this.players.sort((a, b) => b.mmr - a.mmr);\r\n\r\n    const firstTeam = [];\r\n    const secondTeam = [];\r\n\r\n    sortedPlayers.forEach((player, index) => {\r\n      const getTeam = (0,_utils_common__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(1, 2);\r\n\r\n      if (index % 2 === 0) {\r\n        getTeam === 1 ? firstTeam.push(player) : secondTeam.push(player);\r\n      } else {\r\n        firstTeam.length > secondTeam.length\r\n          ? secondTeam.push(player)\r\n          : firstTeam.push(player);\r\n      }\r\n    });\r\n\r\n    return [firstTeam, secondTeam];\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://dota-shuffle-players/./src/PlayerList.js?");

/***/ }),

/***/ "./src/Team.js":
/*!*********************!*\
  !*** ./src/Team.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Team)\n/* harmony export */ });\nclass Team {\r\n  constructor(players) {\r\n    this.players = players;\r\n    this.avgMMR = players.reduce((a, b) => a + b.mmr, 0) / players.length;\r\n  }\r\n\r\n  getPlayerNames() {\r\n    return this.players.map((player) => player.name);\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://dota-shuffle-players/./src/Team.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _PlayerList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PlayerList */ \"./src/PlayerList.js\");\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Player */ \"./src/Player.js\");\n/* harmony import */ var _Team__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Team */ \"./src/Team.js\");\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/constants */ \"./src/utils/constants.js\");\n/* harmony import */ var _utils_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/common */ \"./src/utils/common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass Main {\r\n  constructor() {\r\n    this.playerForm = {};\r\n    this.firstTeam = [];\r\n    this.secondTeam = [];\r\n    this.playerList = new _PlayerList__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n  }\r\n\r\n  init() {\r\n    this.storeDoms();\r\n    this.bindEvents();\r\n    this.bindAutoComplete();\r\n  }\r\n\r\n  storeDoms() {\r\n    this.playerForm = {\r\n      name: document.querySelector(\"#new-player-name\"),\r\n      medal: document.querySelector(\"#new-player-medal\"),\r\n      star: document.querySelector(\"#new-player-medal-star\"),\r\n      mmr: document.querySelector(\"#new-player-mmr\"),\r\n      btn: document.querySelector(\"#insert-btn\"),\r\n    };\r\n    this.playerListingDom = document.querySelectorAll(\r\n      \"#players-listing .player-item\"\r\n    );\r\n    this.shufflePlayerBtn = document.querySelector(\"#shuffle-btn\");\r\n\r\n    this.firstTeamPlayerDom = document.querySelectorAll(\r\n      \"#team-1-players .player-item\"\r\n    );\r\n    this.firstTeamAvgDom = document.querySelector(\"#team-1-avg\");\r\n\r\n    this.secondTeamPlayerDom = document.querySelectorAll(\r\n      \"#team-2-players .player-item\"\r\n    );\r\n    this.secondTeamAvgDom = document.querySelector(\"#team-2-avg\");\r\n\r\n    this.copyBtns = document.querySelectorAll(\".copy-btn\");\r\n\r\n    this.findPlayerInput = document.getElementById(\"findPlayerInput\");\r\n    this.findPlayerSubmit = document.getElementById(\"findPlayerSubmit\");\r\n  }\r\n\r\n  bindEvents() {\r\n    this.playerForm.btn.addEventListener(\r\n      \"click\",\r\n      this.createNewPlayer.bind(this)\r\n    );\r\n\r\n    this.playerListingDom.forEach((item) => {\r\n      item.addEventListener(\"click\", this.removePlayer.bind(this));\r\n    });\r\n\r\n    this.shufflePlayerBtn.addEventListener(\r\n      \"click\",\r\n      this.shufflePlayer.bind(this)\r\n    );\r\n\r\n    this.copyBtns.forEach((btn) => {\r\n      btn.addEventListener(\"click\", this.copyTeamToClipboard.bind(this));\r\n    });\r\n\r\n    this.findPlayerSubmit.addEventListener(\r\n      \"click\",\r\n      this.insertFoundPlayer.bind(this)\r\n    );\r\n  }\r\n\r\n  bindAutoComplete() {\r\n    const playerNames = _utils_constants__WEBPACK_IMPORTED_MODULE_3__.REGULAR_PLAYERS.map((player) => player.name);\r\n    (0,_utils_common__WEBPACK_IMPORTED_MODULE_4__.autocomplete)(this.findPlayerInput, playerNames);\r\n  }\r\n\r\n  // DOM RENDERING\r\n\r\n  renderPlayersListing() {\r\n    this.playerListingDom.forEach((item) => {\r\n      const getIdDOM = item.querySelector(\".player-id\");\r\n      const getNameDOM = item.querySelector(\".player-name\");\r\n      const getRankDOM = item.querySelector(\".player-rank\");\r\n\r\n      getIdDOM.value = \"\";\r\n      getNameDOM.textContent = \"\";\r\n      getRankDOM.textContent = ``;\r\n    });\r\n\r\n    this.playerList.players.forEach((player, index) => {\r\n      const getRowDOM = this.playerListingDom[index];\r\n      const getIdDOM = getRowDOM.querySelector(\".player-id\");\r\n      const getNameDOM = getRowDOM.querySelector(\".player-name\");\r\n      const getRankDOM = getRowDOM.querySelector(\".player-rank\");\r\n\r\n      getIdDOM.value = player.id;\r\n      getNameDOM.textContent = player.name;\r\n      getRankDOM.textContent = `~ ${player.mmr}`;\r\n    });\r\n  }\r\n\r\n  renderError(elementId, errorMsg) {\r\n    if (!elementId) return;\r\n\r\n    const element = document.querySelector(`#${elementId}`);\r\n    if (element) {\r\n      element.textContent = errorMsg;\r\n      element.style.display = \"inline-block\";\r\n    }\r\n\r\n    setTimeout(() => {\r\n      element.textContent = \"\";\r\n      element.style.display = \"none\";\r\n    }, 1000);\r\n  }\r\n\r\n  renderTeams() {\r\n    this.firstTeamAvgDom.textContent = this.firstTeam.avgMMR;\r\n    this.firstTeam.players.forEach((player, index) => {\r\n      const getRowDOM = this.firstTeamPlayerDom[index];\r\n      const getIdDOM = getRowDOM.querySelector(\".player-id\");\r\n      const getNameDOM = getRowDOM.querySelector(\".player-name\");\r\n      const getRankDOM = getRowDOM.querySelector(\".player-rank\");\r\n\r\n      getIdDOM.value = player.id;\r\n      getNameDOM.textContent = player.name;\r\n      getRankDOM.textContent = `~ ${player.mmr}`;\r\n    });\r\n\r\n    this.secondTeamAvgDom.textContent = this.secondTeam.avgMMR;\r\n    this.secondTeam.players.forEach((player, index) => {\r\n      const getRowDOM = this.secondTeamPlayerDom[index];\r\n      const getIdDOM = getRowDOM.querySelector(\".player-id\");\r\n      const getNameDOM = getRowDOM.querySelector(\".player-name\");\r\n      const getRankDOM = getRowDOM.querySelector(\".player-rank\");\r\n\r\n      getIdDOM.value = player.id;\r\n      getNameDOM.textContent = player.name;\r\n      getRankDOM.textContent = `~ ${player.mmr}`;\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.playerForm.name.value = \"\";\r\n    this.playerForm.mmr.value = \"\";\r\n  }\r\n\r\n  // DOM LOGIC\r\n  createNewPlayer(event, foundPlayer = null) {\r\n    event.preventDefault();\r\n    if (this.playerList.players.length === 10) {\r\n      this.renderError(\"playerlist-error\", \"Maximum player is 10!\");\r\n      this.renderError(\"playerlist-modal-error\", \"Maximum player is 10!\");\r\n      return;\r\n    }\r\n\r\n    if (!foundPlayer && !this.playerForm.name.value) {\r\n      this.renderError(\"playerlist-error\", \"Player name is required!\");\r\n      return;\r\n    }\r\n\r\n    const playerName = foundPlayer?.name || this.playerForm.name.value;\r\n    const playerRank = `${this.playerForm.medal.value} ${this.playerForm.star.value}`;\r\n    const mmr = foundPlayer?.mmr\r\n      ? foundPlayer.mmr\r\n      : this.playerForm.mmr.value\r\n      ? +this.playerForm.mmr.value\r\n      : +_utils_constants__WEBPACK_IMPORTED_MODULE_3__.MMR_NUMBER[playerRank];\r\n\r\n    const player = new _Player__WEBPACK_IMPORTED_MODULE_1__[\"default\"](playerName, mmr);\r\n\r\n    this.playerList.addPlayer(player);\r\n    this.renderPlayersListing();\r\n    this.resetForm();\r\n  }\r\n\r\n  removePlayer(event) {\r\n    const getId = event.target.querySelector(\".player-id\").value;\r\n\r\n    if (getId) {\r\n      this.playerList.removePlayer(getId);\r\n      this.renderPlayersListing();\r\n    }\r\n  }\r\n\r\n  shufflePlayer() {\r\n    if (this.playerList.players.length < 10) {\r\n      this.renderError(\"shuffle-error\", \"Not enough player!\");\r\n      return;\r\n    }\r\n\r\n    const [firstTeamPlayers, secondTeamPlayers] =\r\n      this.playerList.shufflePlayer();\r\n\r\n    this.firstTeam = new _Team__WEBPACK_IMPORTED_MODULE_2__[\"default\"](firstTeamPlayers);\r\n    this.secondTeam = new _Team__WEBPACK_IMPORTED_MODULE_2__[\"default\"](secondTeamPlayers);\r\n    this.renderTeams();\r\n  }\r\n\r\n  copyTeamToClipboard({ target }) {\r\n    if (target.id === _utils_constants__WEBPACK_IMPORTED_MODULE_3__.TEAM_COPY_BTN.first) {\r\n      const text = `Team 1 is: ${this.firstTeam.getPlayerNames().join(\", \")}`;\r\n      (0,_utils_common__WEBPACK_IMPORTED_MODULE_4__.copyToClipBoard)(text);\r\n    } else {\r\n      const text = `Team 2 is: ${this.secondTeam.getPlayerNames().join(\", \")}`;\r\n      (0,_utils_common__WEBPACK_IMPORTED_MODULE_4__.copyToClipBoard)(text);\r\n    }\r\n  }\r\n\r\n  insertFoundPlayer(event) {\r\n    const findPlayer = _utils_constants__WEBPACK_IMPORTED_MODULE_3__.REGULAR_PLAYERS.find(\r\n      (player) => player.name === this.findPlayerInput.value\r\n    );\r\n    this.createNewPlayer(event, findPlayer);\r\n    this.findPlayerInput.value = \"\";\r\n  }\r\n}\r\n\r\nconst app = new Main();\r\napp.init();\r\n\n\n//# sourceURL=webpack://dota-shuffle-players/./src/index.js?");

/***/ }),

/***/ "./src/utils/common.js":
/*!*****************************!*\
  !*** ./src/utils/common.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"autocomplete\": () => (/* binding */ autocomplete),\n/* harmony export */   \"capitalizeString\": () => (/* binding */ capitalizeString),\n/* harmony export */   \"copyToClipBoard\": () => (/* binding */ copyToClipBoard),\n/* harmony export */   \"getRandomInt\": () => (/* binding */ getRandomInt)\n/* harmony export */ });\nconst getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nconst capitalizeString = (string) => {\r\n  return string[0].toUpperCase() + string.substring(1);\r\n};\r\n\r\nconst copyToClipBoard = (text) => {\r\n  navigator.clipboard.writeText(text);\r\n};\r\n\r\nfunction autocomplete(inp, arr) {\r\n  /*the autocomplete function takes two arguments,\r\n  the text field element and an array of possible autocompleted values:*/\r\n  var currentFocus;\r\n  /*execute a function when someone writes in the text field:*/\r\n  inp.addEventListener(\"input\", function (e) {\r\n    var a,\r\n      b,\r\n      i,\r\n      val = this.value;\r\n    /*close any already open lists of autocompleted values*/\r\n    closeAllLists();\r\n    if (!val) {\r\n      return false;\r\n    }\r\n    currentFocus = -1;\r\n    /*create a DIV element that will contain the items (values):*/\r\n    a = document.createElement(\"DIV\");\r\n    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n    a.setAttribute(\"class\", \"autocomplete-items\");\r\n    /*append the DIV element as a child of the autocomplete container:*/\r\n    this.parentNode.appendChild(a);\r\n    /*for each item in the array...*/\r\n    for (i = 0; i < arr.length; i++) {\r\n      /*check if the item starts with the same letters as the text field value:*/\r\n      if (arr[i].toUpperCase().includes(val.toUpperCase())) {\r\n        /*create a DIV element for each matching element:*/\r\n        b = document.createElement(\"DIV\");\r\n        /*make the matching letters bold:*/\r\n        b.innerHTML += arr[i];\r\n        /*insert a input field that will hold the current array item's value:*/\r\n        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n        /*execute a function when someone clicks on the item value (DIV element):*/\r\n        b.addEventListener(\"click\", function (e) {\r\n          /*insert the value for the autocomplete text field:*/\r\n          inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n          /*close the list of autocompleted values,\r\n              (or any other open lists of autocompleted values:*/\r\n          closeAllLists();\r\n        });\r\n        a.appendChild(b);\r\n      }\r\n    }\r\n  });\r\n  /*execute a function presses a key on the keyboard:*/\r\n  inp.addEventListener(\"keydown\", function (e) {\r\n    var x = document.getElementById(this.id + \"autocomplete-list\");\r\n    if (x) x = x.getElementsByTagName(\"div\");\r\n    if (e.keyCode == 40) {\r\n      /*If the arrow DOWN key is pressed,\r\n        increase the currentFocus variable:*/\r\n      currentFocus++;\r\n      /*and and make the current item more visible:*/\r\n      addActive(x);\r\n    } else if (e.keyCode == 38) {\r\n      //up\r\n      /*If the arrow UP key is pressed,\r\n        decrease the currentFocus variable:*/\r\n      currentFocus--;\r\n      /*and and make the current item more visible:*/\r\n      addActive(x);\r\n    } else if (e.keyCode == 13) {\r\n      /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n      e.preventDefault();\r\n      if (currentFocus > -1) {\r\n        /*and simulate a click on the \"active\" item:*/\r\n        if (x) x[currentFocus].click();\r\n      }\r\n    }\r\n  });\r\n  function addActive(x) {\r\n    /*a function to classify an item as \"active\":*/\r\n    if (!x) return false;\r\n    /*start by removing the \"active\" class on all items:*/\r\n    removeActive(x);\r\n    if (currentFocus >= x.length) currentFocus = 0;\r\n    if (currentFocus < 0) currentFocus = x.length - 1;\r\n    /*add class \"autocomplete-active\":*/\r\n    x[currentFocus].classList.add(\"autocomplete-active\");\r\n  }\r\n  function removeActive(x) {\r\n    /*a function to remove the \"active\" class from all autocomplete items:*/\r\n    for (var i = 0; i < x.length; i++) {\r\n      x[i].classList.remove(\"autocomplete-active\");\r\n    }\r\n  }\r\n  function closeAllLists(elmnt) {\r\n    /*close all autocomplete lists in the document,\r\n    except the one passed as an argument:*/\r\n    var x = document.getElementsByClassName(\"autocomplete-items\");\r\n    for (var i = 0; i < x.length; i++) {\r\n      if (elmnt != x[i] && elmnt != inp) {\r\n        x[i].parentNode.removeChild(x[i]);\r\n      }\r\n    }\r\n  }\r\n  /*execute a function when someone clicks in the document:*/\r\n  document.addEventListener(\"click\", function (e) {\r\n    closeAllLists(e.target);\r\n  });\r\n}\r\n\n\n//# sourceURL=webpack://dota-shuffle-players/./src/utils/common.js?");

/***/ }),

/***/ "./src/utils/constants.js":
/*!********************************!*\
  !*** ./src/utils/constants.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MMR_NUMBER\": () => (/* binding */ MMR_NUMBER),\n/* harmony export */   \"REGULAR_PLAYERS\": () => (/* binding */ REGULAR_PLAYERS),\n/* harmony export */   \"TEAM_COPY_BTN\": () => (/* binding */ TEAM_COPY_BTN)\n/* harmony export */ });\nconst MMR_NUMBER = {\r\n  \"herald 1\": 0,\r\n  \"herald 2\": 154,\r\n  \"herald 3\": 308,\r\n  \"herald 4\": 462,\r\n  \"herald 5\": 616,\r\n\r\n  \"guardian 1\": 770,\r\n  \"guardian 2\": 924,\r\n  \"guardian 3\": 1078,\r\n  \"guardian 4\": 1232,\r\n  \"guardian 5\": 1386,\r\n\r\n  \"crusader 1\": 1540,\r\n  \"crusader 2\": 1694,\r\n  \"crusader 3\": 1848,\r\n  \"crusader 4\": 2002,\r\n  \"crusader 5\": 2156,\r\n\r\n  \"archon 1\": 2310,\r\n  \"archon 2\": 2464,\r\n  \"archon 3\": 2618,\r\n  \"archon 4\": 2772,\r\n  \"archon 5\": 2926,\r\n\r\n  \"legend 1\": 3080,\r\n  \"legend 2\": 3234,\r\n  \"legend 3\": 3388,\r\n  \"legend 4\": 3542,\r\n  \"legend 5\": 3696,\r\n\r\n  \"ancient 1\": 3850,\r\n  \"ancient 2\": 4004,\r\n  \"ancient 3\": 4158,\r\n  \"ancient 4\": 4312,\r\n  \"ancient 5\": 4466,\r\n\r\n  \"divine 1\": 4620,\r\n  \"divine 2\": 4820,\r\n  \"divine 3\": 5020,\r\n  \"divine 4\": 5220,\r\n  \"divine 5\": 5420,\r\n};\r\n\r\nconst TEAM_COPY_BTN = {\r\n  first: \"copy-team-1\",\r\n  second: \"copy-team-2\",\r\n};\r\n\r\nconst REGULAR_PLAYERS = [\r\n  { name: \"MaoMao\", mmr: 4050 },\r\n  { name: \"Gary\", mmr: 4200 },\r\n  { name: \"Minuano\", mmr: 4200 },\r\n  { name: \"Chraos\", mmr: 4450 },\r\n  { name: \"Kinzaki\", mmr: 3500 },\r\n  { name: \"1v70\", mmr: 5900 },\r\n  { name: \"Snapping Turtle\", mmr: 3600 },\r\n  { name: \"Levi\", mmr: 4100 },\r\n  { name: \"Shen\", mmr: 2000 },\r\n  { name: \"Madossa\", mmr: 2800 },\r\n  { name: \"t - Shifon\", mmr: 7800 },\r\n  { name: \"Le Unibers\", mmr: 2000 },\r\n  { name: \"Scooby Doo\", mmr: 3300 },\r\n  { name: \"League Player\", mmr: 6500 },\r\n  { name: \"hip73\", mmr: 690 },\r\n  { name: \"Cheemsuke\", mmr: 4670 },\r\n  { name: \"Divineness\", mmr: 6780 },\r\n  { name: \"Solar Ghost\", mmr: 6200 },\r\n  { name: \"L0hg!k / Lohgik\", mmr: 3470 },\r\n  { name: \"Momose\", mmr: 4200 },\r\n  { name: \"Jraniel\", mmr: 3660 },\r\n  { name: \"Devince / Rumanzovia\", mmr: 1380 },\r\n  { name: \"Wei / Indian Mummy\", mmr: 3050 },\r\n  { name: \"PaxCalibur\", mmr: 5700 },\r\n  { name: \"SlowDuck\", mmr: 1700 },\r\n  { name: \"Yuzu / Yaznaz\", mmr: 5370 },\r\n  { name: \"Serial Chiller / Vi\", mmr: 5400 },\r\n  { name: \"Zei / Little leaf\", mmr: 5600 },\r\n  { name: \"prkr\", mmr: 3500 },\r\n  { name: \"Primo\", mmr: 6260 },\r\n  { name: \"Gin\", mmr: 3140 },\r\n  { name: \"Bobman\", mmr: 6640 },\r\n  { name: \"YobaFromStarWars\", mmr: 5450 },\r\n  { name: \"Rendi\", mmr: 5030 },\r\n  { name: \"Ducknana\", mmr: 4500 },\r\n  { name: \"Barty\", mmr: 4800 },\r\n  { name: \"Trekr\", mmr: 1270 },\r\n  { name: \"Zirrana\", mmr: 2070 },\r\n  { name: \"Leader of the Guardians\", mmr: 3600 },\r\n  { name: \"RedA3\", mmr: 5400 },\r\n  { name: \"A.Julius\", mmr: 2980 },\r\n  { name: \"k4k4shi / kakashi\", mmr: 2200 },\r\n  { name: \"swithdas\", mmr: 3850 },\r\n  { name: \"Voyager / Enjoy Life\", mmr: 2790 },\r\n  { name: \"Shreder / Nami Swaaan\", mmr: 3680 },\r\n  { name: \"Aeryj\", mmr: 4650 },\r\n  { name: \"Anvar\", mmr: 4400 },\r\n  { name: \"Doolie\", mmr: 4650 },\r\n  { name: \"Fortune\", mmr: 3500 },\r\n  { name: \"Jng / Jooong\", mmr: 4070 },\r\n  { name: \"742 - JaTu\", mmr: 1470 },\r\n  { name: \"tasukete / intrepid\", mmr: 1470 },\r\n];\r\n\n\n//# sourceURL=webpack://dota-shuffle-players/./src/utils/constants.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("./src/index.js"));
/******/ }
]);